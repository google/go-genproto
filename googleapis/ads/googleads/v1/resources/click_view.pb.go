// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v1/resources/click_view.proto

package resources

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	common "google.golang.org/genproto/googleapis/ads/googleads/v1/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A click view with metrics aggregated at each click level, including both
// valid and invalid clicks. For non-Search campaigns, metrics.clicks
// represents the number of valid and invalid interactions.
// Queries including ClickView must have a filter limiting the results to one
// day and can be requested for dates back to 90 days before the time of the
// request.
type ClickView struct {
	// Immutable. The resource name of the click view.
	// Click view resource names have the form:
	//
	// `customers/{customer_id}/clickViews/{date (yyyy-MM-dd)}~{gclid}`
	ResourceName string `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	// Output only. The Google Click ID.
	Gclid *wrappers.StringValue `protobuf:"bytes,2,opt,name=gclid,proto3" json:"gclid,omitempty"`
	// Output only. The location criteria matching the area of interest associated with the
	// impression.
	AreaOfInterest *common.ClickLocation `protobuf:"bytes,3,opt,name=area_of_interest,json=areaOfInterest,proto3" json:"area_of_interest,omitempty"`
	// Output only. The location criteria matching the location of presence associated with the
	// impression.
	LocationOfPresence *common.ClickLocation `protobuf:"bytes,4,opt,name=location_of_presence,json=locationOfPresence,proto3" json:"location_of_presence,omitempty"`
	// Output only. Page number in search results where the ad was shown.
	PageNumber           *wrappers.Int64Value `protobuf:"bytes,5,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ClickView) Reset()         { *m = ClickView{} }
func (m *ClickView) String() string { return proto.CompactTextString(m) }
func (*ClickView) ProtoMessage()    {}
func (*ClickView) Descriptor() ([]byte, []int) {
	return fileDescriptor_c61fa672950e615e, []int{0}
}

func (m *ClickView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClickView.Unmarshal(m, b)
}
func (m *ClickView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClickView.Marshal(b, m, deterministic)
}
func (m *ClickView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickView.Merge(m, src)
}
func (m *ClickView) XXX_Size() int {
	return xxx_messageInfo_ClickView.Size(m)
}
func (m *ClickView) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickView.DiscardUnknown(m)
}

var xxx_messageInfo_ClickView proto.InternalMessageInfo

func (m *ClickView) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *ClickView) GetGclid() *wrappers.StringValue {
	if m != nil {
		return m.Gclid
	}
	return nil
}

func (m *ClickView) GetAreaOfInterest() *common.ClickLocation {
	if m != nil {
		return m.AreaOfInterest
	}
	return nil
}

func (m *ClickView) GetLocationOfPresence() *common.ClickLocation {
	if m != nil {
		return m.LocationOfPresence
	}
	return nil
}

func (m *ClickView) GetPageNumber() *wrappers.Int64Value {
	if m != nil {
		return m.PageNumber
	}
	return nil
}

func init() {
	proto.RegisterType((*ClickView)(nil), "google.ads.googleads.v1.resources.ClickView")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v1/resources/click_view.proto", fileDescriptor_c61fa672950e615e)
}

var fileDescriptor_c61fa672950e615e = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x4f, 0x6b, 0x13, 0x41,
	0x18, 0xc6, 0x49, 0x62, 0x84, 0x4e, 0xb5, 0xc8, 0xe2, 0x21, 0xd6, 0xa2, 0x6d, 0xb1, 0x50, 0x44,
	0x67, 0x48, 0x2b, 0x0a, 0xeb, 0x69, 0xe2, 0xa1, 0x54, 0xa4, 0x09, 0x11, 0x73, 0x90, 0xc0, 0x32,
	0x99, 0x7d, 0xb3, 0x0e, 0xee, 0xce, 0x2c, 0x33, 0x9b, 0xe4, 0x20, 0xfd, 0x32, 0x1e, 0xfd, 0x28,
	0x7e, 0x8a, 0x9e, 0x7b, 0xf5, 0xa6, 0x17, 0xd9, 0x9d, 0x3f, 0x0d, 0x48, 0x55, 0x7a, 0x7b, 0x92,
	0xf7, 0x79, 0x7e, 0xef, 0x3b, 0xef, 0xcc, 0xa2, 0xa3, 0x4c, 0xa9, 0x2c, 0x07, 0xc2, 0x52, 0x43,
	0xac, 0xac, 0xd5, 0xb2, 0x4f, 0x34, 0x18, 0xb5, 0xd0, 0x1c, 0x0c, 0xe1, 0xb9, 0xe0, 0x9f, 0x93,
	0xa5, 0x80, 0x15, 0x2e, 0xb5, 0xaa, 0x54, 0xb4, 0x67, 0x8d, 0x98, 0xa5, 0x06, 0x87, 0x0c, 0x5e,
	0xf6, 0x71, 0xc8, 0x6c, 0x1f, 0x5f, 0x87, 0xe5, 0xaa, 0x28, 0x94, 0x74, 0xcc, 0x5c, 0x71, 0x56,
	0x09, 0x25, 0x2d, 0x77, 0xfb, 0xb1, 0x0f, 0x95, 0x82, 0xcc, 0x05, 0xe4, 0x69, 0x32, 0x83, 0x4f,
	0x6c, 0x29, 0x94, 0x76, 0x86, 0x07, 0x6b, 0x06, 0xdf, 0xcb, 0x95, 0x1e, 0xb9, 0x52, 0xf3, 0x6b,
	0xb6, 0x98, 0x93, 0x95, 0x66, 0x65, 0x09, 0xda, 0xb8, 0xfa, 0xce, 0x5a, 0x94, 0x49, 0xa9, 0xaa,
	0xa6, 0xb1, 0xab, 0xee, 0xff, 0xe8, 0xa0, 0x8d, 0x37, 0xf5, 0x48, 0x13, 0x01, 0xab, 0x68, 0x88,
	0xee, 0x7a, 0x7a, 0x22, 0x59, 0x01, 0xbd, 0xd6, 0x6e, 0xeb, 0x70, 0x63, 0xf0, 0xf4, 0x82, 0x76,
	0x7f, 0xd2, 0x27, 0x68, 0xff, 0xea, 0xcc, 0x4e, 0x95, 0xc2, 0x60, 0xae, 0x0a, 0x12, 0x10, 0xe3,
	0x3b, 0x1e, 0x70, 0xc6, 0x0a, 0x88, 0x5e, 0xa1, 0x6e, 0xc6, 0x73, 0x91, 0xf6, 0xda, 0xbb, 0xad,
	0xc3, 0xcd, 0xa3, 0x1d, 0x97, 0xc3, 0x7e, 0x58, 0xfc, 0xbe, 0xd2, 0x42, 0x66, 0x13, 0x96, 0x2f,
	0x60, 0xd0, 0xb9, 0xa0, 0x9d, 0xb1, 0xf5, 0x47, 0x53, 0x74, 0x8f, 0x69, 0x60, 0x89, 0x9a, 0x27,
	0x42, 0x56, 0xa0, 0xc1, 0x54, 0xbd, 0x4e, 0xc3, 0x78, 0x8e, 0xaf, 0xbb, 0x04, 0xbb, 0x61, 0xdc,
	0xcc, 0xf2, 0xce, 0x2d, 0xd8, 0x42, 0xb7, 0x6a, 0xd6, 0x70, 0x7e, 0xea, 0x48, 0x51, 0x8a, 0xee,
	0xfb, 0x1b, 0xa8, 0x3b, 0x94, 0x1a, 0x0c, 0x48, 0x0e, 0xbd, 0x5b, 0x37, 0xee, 0x10, 0x79, 0xde,
	0x70, 0x3e, 0x72, 0xb4, 0x88, 0xa2, 0xcd, 0x92, 0x65, 0x90, 0xc8, 0x45, 0x31, 0x03, 0xdd, 0xeb,
	0x36, 0xf0, 0x87, 0x7f, 0xac, 0xe0, 0x54, 0x56, 0x2f, 0x5f, 0xac, 0x6d, 0x00, 0xd5, 0xa1, 0xb3,
	0x26, 0x13, 0x7f, 0xb8, 0xa4, 0xe3, 0xff, 0x59, 0x7b, 0xf4, 0x8c, 0x2f, 0x4c, 0xa5, 0x0a, 0xd0,
	0x86, 0x7c, 0xf1, 0xf2, 0xdc, 0x3e, 0xb6, 0xba, 0x5e, 0xff, 0x1b, 0x1e, 0xf3, 0xf9, 0xe0, 0x57,
	0x0b, 0x1d, 0x70, 0x55, 0xe0, 0x7f, 0x3e, 0xe7, 0xc1, 0x56, 0x68, 0x31, 0xaa, 0xe7, 0x1d, 0xb5,
	0x3e, 0xbe, 0x75, 0xa1, 0x4c, 0xe5, 0x4c, 0x66, 0x58, 0xe9, 0x8c, 0x64, 0x20, 0x9b, 0xd3, 0x90,
	0xab, 0xf1, 0xfe, 0xf2, 0x59, 0xbd, 0x0e, 0xea, 0x6b, 0xbb, 0x73, 0x42, 0xe9, 0xb7, 0xf6, 0xde,
	0x89, 0x45, 0xd2, 0xd4, 0x60, 0x2b, 0x6b, 0x35, 0xe9, 0xe3, 0xb1, 0x77, 0x7e, 0xf7, 0x9e, 0x29,
	0x4d, 0xcd, 0x34, 0x78, 0xa6, 0x93, 0xfe, 0x34, 0x78, 0x2e, 0xdb, 0x07, 0xb6, 0x10, 0xc7, 0x34,
	0x35, 0x71, 0x1c, 0x5c, 0x71, 0x3c, 0xe9, 0xc7, 0x71, 0xf0, 0xcd, 0x6e, 0x37, 0xc3, 0x1e, 0xff,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xef, 0x82, 0xa3, 0x02, 0x04, 0x00, 0x00,
}
